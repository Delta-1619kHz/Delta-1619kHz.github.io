<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://delta-1619khz.github.io/</id>
    <title>Gridea</title>
    <updated>2020-02-15T09:29:27.768Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://delta-1619khz.github.io/"/>
    <link rel="self" href="https://delta-1619khz.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://delta-1619khz.github.io/images/avatar.png</logo>
    <icon>https://delta-1619khz.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[简单求和]]></title>
        <id>https://delta-1619khz.github.io/post/jian-dan-qiu-he</id>
        <link href="https://delta-1619khz.github.io/post/jian-dan-qiu-he">
        </link>
        <updated>2020-02-15T09:22:59.000Z</updated>
        <summary type="html"><![CDATA[<p>本题要求实现一个函数，求给定的N个整数的和。</p>
<p>函数接口定义：<br>
int Sum ( int List[], int N );</p>
<p>其中给定整数存放在数组List[]中，正整数N是数组元素个数。该函数须返回N个List[]元素的和。</p>
<p>裁判测试程序样例：<br>
#include &lt;stdio.h&gt;</p>
<p>#define MAXN 10</p>
<p>int Sum ( int List[], int N );</p>
<p>int main ()<br>
{<br>
int List[MAXN], N, i;</p>
<pre><code>scanf(&quot;%d&quot;, &amp;N);
for ( i=0; i&lt;N; i++ )
    scanf(&quot;%d&quot;, &amp;List[i]);
printf(&quot;%d\n&quot;, Sum(List, N));

return 0;
</code></pre>
<p>}</p>
<p>/* 你的代码将被嵌在这里 */</p>
]]></summary>
        <content type="html"><![CDATA[<p>本题要求实现一个函数，求给定的N个整数的和。</p>
<p>函数接口定义：<br>
int Sum ( int List[], int N );</p>
<p>其中给定整数存放在数组List[]中，正整数N是数组元素个数。该函数须返回N个List[]元素的和。</p>
<p>裁判测试程序样例：<br>
#include &lt;stdio.h&gt;</p>
<p>#define MAXN 10</p>
<p>int Sum ( int List[], int N );</p>
<p>int main ()<br>
{<br>
int List[MAXN], N, i;</p>
<pre><code>scanf(&quot;%d&quot;, &amp;N);
for ( i=0; i&lt;N; i++ )
    scanf(&quot;%d&quot;, &amp;List[i]);
printf(&quot;%d\n&quot;, Sum(List, N));

return 0;
</code></pre>
<p>}</p>
<p>/* 你的代码将被嵌在这里 */</p>
<h2 id="-more-"><!-- more --></h2>
<p>#include &lt;stdio.h&gt;</p>
<p>#define MAXN 10</p>
<p>int Sum ( int List[], int N );</p>
<p>int main ()<br>
{<br>
int List[MAXN], N, i;</p>
<pre><code>scanf(&quot;%d&quot;, &amp;N);
for ( i=0; i&lt;N; i++ )
    scanf(&quot;%d&quot;, &amp;List[i]);
printf(&quot;%d\n&quot;, Sum(List, N));

return 0;
</code></pre>
<p>}</p>
<p>int Sum ( int List[], int N )<br>
{<br>
int sum = 0;<br>
for(int i = 0;i &lt; N;i++) sum += List[i];</p>
<pre><code>return sum;
</code></pre>
<p>}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[多项式求值]]></title>
        <id>https://delta-1619khz.github.io/post/duo-xiang-shi-qiu-zhi</id>
        <link href="https://delta-1619khz.github.io/post/duo-xiang-shi-qiu-zhi">
        </link>
        <updated>2020-02-15T09:15:05.000Z</updated>
        <summary type="html"><![CDATA[<p>#include &lt;stdio.h&gt;</p>
<p>#define MAXN 10</p>
<p>double f( int n, double a[], double x );</p>
<p>int main()<br>
{<br>
int n, i;<br>
double a[MAXN], x;</p>
<pre><code>scanf(&quot;%d %lf&quot;, &amp;n, &amp;x);
for ( i=0; i&lt;=n; i++ )
    scanf(“%lf”, &amp;a[i]);
printf(&quot;%.1f\n&quot;, f(n, a, x));
return 0;
</code></pre>
<p>}</p>
<p>double f( int n, double a[], double x )<br>
{<br>
double sum = 0,b = 1;<br>
for (int i = 0;i &lt;= n;i++)<br>
{<br>
sum += a[i]*b;<br>
b *= x;<br>
}</p>
<pre><code>return sum;
</code></pre>
<p>}</p>
]]></summary>
        <content type="html"><![CDATA[<p>#include &lt;stdio.h&gt;</p>
<p>#define MAXN 10</p>
<p>double f( int n, double a[], double x );</p>
<p>int main()<br>
{<br>
int n, i;<br>
double a[MAXN], x;</p>
<pre><code>scanf(&quot;%d %lf&quot;, &amp;n, &amp;x);
for ( i=0; i&lt;=n; i++ )
    scanf(“%lf”, &amp;a[i]);
printf(&quot;%.1f\n&quot;, f(n, a, x));
return 0;
</code></pre>
<p>}</p>
<p>double f( int n, double a[], double x )<br>
{<br>
double sum = 0,b = 1;<br>
for (int i = 0;i &lt;= n;i++)<br>
{<br>
sum += a[i]*b;<br>
b *= x;<br>
}</p>
<pre><code>return sum;
</code></pre>
<p>}</p>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[简单输出整数]]></title>
        <id>https://delta-1619khz.github.io/post/jian-dan-shu-chu-zheng-shu</id>
        <link href="https://delta-1619khz.github.io/post/jian-dan-shu-chu-zheng-shu">
        </link>
        <updated>2020-02-15T05:09:28.000Z</updated>
        <content type="html"><![CDATA[<p>#include &lt;stdio.h&gt;</p>
<p>void PrintN ( int N );</p>
<p>int main ()<br>
{<br>
int N;</p>
<pre><code>scanf(&quot;%d&quot;, &amp;N);
PrintN( N );

return 0;
</code></pre>
<p>}</p>
<p>void PrintN ( int N )<br>
{<br>
int i;<br>
for (i = 1;i &lt;= N;i++)<br>
printf(&quot;%d\n&quot;,i);<br>
return;<br>
}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://delta-1619khz.github.io/post/hello-gridea</id>
        <link href="https://delta-1619khz.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>